{"name":"hArduino","tagline":"Control your Arduino board from Haskell","body":"hArduino\r\n==========\r\n\r\n[![Build Status](https://travis-ci.org/LeventErkok/hArduino.png)](http://travis-ci.org/LeventErkok/hArduino)\r\n\r\nhArduino allows Haskell programs to control [Arduino](http://arduino.cc/) boards and peripherals, using the [Firmata](http://firmata.org) protocol.\r\n\r\nOn Hackage (v0.6): [hArduino](http://hackage.haskell.org/package/hArduino).\r\n\r\nSome example programs:\r\n\r\n   * Hello world: The standard led-blinking example: [Blink.hs]\r\n(http://hackage.haskell.org/packages/archive/hArduino/latest/doc/html/System-Hardware-Arduino-SamplePrograms-Blink.html)\r\n   * Controlling a digital switch: [Button.hs](http://hackage.haskell.org/packages/archive/hArduino/latest/doc/html/System-Hardware-Arduino-SamplePrograms-Button.html)\r\n   * Implementing a counter via a pair of push-buttons: [Counter.hs](http://hackage.haskell.org/packages/archive/hArduino/latest/doc/html/System-Hardware-Arduino-SamplePrograms-Counter.html)\r\n   * Reading an analog input value: [Analog.hs](http://hackage.haskell.org/packages/archive/hArduino/latest/doc/html/System-Hardware-Arduino-SamplePrograms-Analog.html)\r\n   * Control an LCD display: [LCD.hs](http://hackage.haskell.org/packages/archive/hArduino/latest/doc/html/System-Hardware-Arduino-SamplePrograms-LCD.html)\r\n   * Sending and receiving pulses: [Pulse.hs]\r\n(http://hackage.haskell.org/packages/archive/hArduino/latest/doc/html/System-Hardware-Arduino-SamplePrograms-Pulse.html)\r\n   * Measure distance using HC-SR04: [Distance.hs](http://hackage.haskell.org/packages/archive/hArduino/latest/doc/html/System-Hardware-Arduino-SamplePrograms-Distance.html)\r\n   * Control a 7-segment-display: [SevenSegment.hs](http://hackage.haskell.org/packages/archive/hArduino/latest/doc/html/System-Hardware-Arduino-SamplePrograms-SevenSegment.html)\r\n   * Control a servo motor: [Servo.hs](http://hackage.haskell.org/packages/archive/hArduino/latest/doc/html/System-Hardware-Arduino-SamplePrograms-Servo.html)\r\n  \r\n`NB.` Sample programs above use the device `/dev/cu.usbmodemfd131` to access the Arduino, which happens to be the port I use on my development Mac machine. Make sure you use the correct port name in the call to the `withArduino` function, pointing to the USB port your Arduino is connected to. (On Linux, this will look like one of `/dev/ttyUSB*`, `/dev/ttyACM*` or similar. On Windows, it will look something like `COM3`.)\r\n\r\nThere is a short [video](http://www.youtube.com/watch?v=PPa3im44t2g) (4m29s) demonstrating the blink example.\r\n\r\nhArduino has been tested on Mac OSX (Mountain Lion), Linux (Ubuntu 12.04.2), and Windows 7. Patches, bug reports, and suggestions are most welcome.\r\n\r\n[Release notes](http://github.com/LeventErkok/hArduino/blob/master/CHANGES.md).\r\n\r\n## Arduino setup\r\n\r\nTo use hArduino, you need to make sure your Arduino board is connected to your computer, and the firmata protocol is running on it: \r\n\r\n  * Install the Arduino environment: http://arduino.cc/en/Main/Software.\r\n  * Start the Arduino IDE. Using the 'File->Examples->Firmata' menu, upload \"StandardFirmata\" to your board. \r\n  * [Optional] Run the  [firmata_test](http://firmata.org/wiki/Main_Page#Firmata_Test_Program) program to ensure your computer can access the Arduino via Firmata.\r\n  * Quit the Arduino IDE. You don't need it running for hArduino to work.\r\n\r\nNote that you need to do these steps only **once**. Once you get StandardFirmata running on your board, it will stay there even if you disconnect your Arduino from the USB port, or completely power down your computer.\r\n\r\n## Thanks\r\nThe following people reported bugs, provided comments/feedback, or contributed to the development of hArduino in various ways: Alexander Altman and Andriy Drozdyuk.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}